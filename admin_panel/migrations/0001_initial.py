# Generated by Django 4.2.1 on 2023-05-31 08:58

import admin_panel.utilities
from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('phone', models.CharField(max_length=19, validators=[django.core.validators.MaxLengthValidator(19), django.core.validators.MinLengthValidator(19), django.core.validators.ProhibitNullCharactersValidator(), django.core.validators.RegexValidator('^\\+38 \\(\\d{3}\\) \\d{3}-?\\d{2}-?\\d{2}$', message='Неверно введён номер телефона.Пример ввода: +38 (098) 567-81-23')], verbose_name='Номер телефона')),
                ('status', models.CharField(choices=[('new', 'Новый'), ('active', 'Активен'), ('disabled', 'Отключен')], default='new', max_length=50, verbose_name='Статус')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'db_table': 'custom_user',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Article',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, default='', max_length=100, verbose_name='Название')),
                ('debit_credit', models.CharField(blank=True, choices=[('plus', 'Приход'), ('minus', 'Расход')], default='plus', max_length=100, verbose_name='Приход/расход')),
            ],
            options={
                'db_table': 'article',
            },
        ),
        migrations.CreateModel(
            name='Flat',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.CharField(blank=True, default='', max_length=100, verbose_name='Номер квартиры')),
                ('square', models.PositiveSmallIntegerField(blank=True, default=0, verbose_name='Площадь (кв.м.)')),
            ],
            options={
                'db_table': 'flat',
            },
        ),
        migrations.CreateModel(
            name='FlatOwner',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('patronymic', models.CharField(blank=True, default='', max_length=100, verbose_name='Отчество')),
                ('viber', models.CharField(blank=True, default='', max_length=100, verbose_name='Viber')),
                ('telegram', models.CharField(blank=True, default='', max_length=100, verbose_name='Telegram')),
                ('bio', models.TextField(blank=True, default='', verbose_name='О владельце (заметки)')),
                ('birthday', models.DateField(blank=True, default='', verbose_name='Дата рождения')),
                ('avatar', models.ImageField(upload_to=admin_panel.utilities.get_timestamp_path, verbose_name='Сменить изображение')),
                ('flat', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='admin_panel.flat')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'flat_owner',
            },
        ),
        migrations.CreateModel(
            name='Gallery',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('img', models.ImageField(upload_to=admin_panel.utilities.get_timestamp_path)),
            ],
            options={
                'db_table': 'gallery',
            },
        ),
        migrations.CreateModel(
            name='House',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, default='', max_length=100, verbose_name='Дом')),
                ('address', models.CharField(blank=True, default='', max_length=100, verbose_name='Адрес')),
                ('gallery', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='admin_panel.gallery')),
            ],
            options={
                'db_table': 'house',
            },
        ),
        migrations.CreateModel(
            name='HouseUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.CharField(choices=[('director', 'Директор'), ('manager', 'Управляющий'), ('accountant', 'Бухгалтер'), ('electrician', 'Электрик'), ('plumber', 'Сантехник')], default='director', max_length=50, verbose_name='Роль')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'houseuser',
            },
        ),
        migrations.CreateModel(
            name='InfoGallery',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, default='', max_length=100, verbose_name='Заголовок')),
                ('description', models.TextField(blank=True, default='', verbose_name='Описание')),
                ('img', models.ImageField(upload_to=admin_panel.utilities.get_timestamp_path)),
            ],
            options={
                'db_table': 'info_gallery',
            },
        ),
        migrations.CreateModel(
            name='Measure',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, default='', max_length=100, verbose_name='Ед. изм.')),
            ],
            options={
                'db_table': 'measure',
            },
        ),
        migrations.CreateModel(
            name='PaymentDetail',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, default='', max_length=100, verbose_name='Название компании')),
                ('description', models.TextField(blank=True, default='', verbose_name='Информация')),
            ],
            options={
                'db_table': 'payment_detail',
            },
        ),
        migrations.CreateModel(
            name='Seo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, default='', max_length=100, verbose_name='Заголовок')),
                ('description', models.TextField(blank=True, default='', verbose_name='Описание')),
                ('keywords', models.TextField(blank=True, default='', verbose_name='Ключевые слова')),
            ],
            options={
                'db_table': 'seo',
            },
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, default='', max_length=100, verbose_name='Услуга')),
                ('show_in_indication', models.BooleanField(default=False)),
                ('measure', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='admin_panel.measure')),
            ],
            options={
                'db_table': 'service',
            },
        ),
        migrations.CreateModel(
            name='TariffSystem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, default='', max_length=100, verbose_name='Название тарифа')),
                ('description', models.TextField(blank=True, default='', verbose_name='Описание тарифа')),
                ('date_edited', models.DateTimeField(auto_now=True)),
                ('service', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='admin_panel.service')),
            ],
            options={
                'db_table': 'tariff_system',
            },
        ),
        migrations.CreateModel(
            name='TariffSite',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, default='', max_length=100, verbose_name='Заголовок')),
                ('description', models.TextField(blank=True, default='', verbose_name='Краткий текст')),
                ('info_gallery', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='admin_panel.infogallery')),
                ('seo', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to='admin_panel.seo')),
            ],
            options={
                'db_table': 'tarif_site',
            },
        ),
        migrations.CreateModel(
            name='SeviceSite',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('info_gallery', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='admin_panel.infogallery')),
                ('seo', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to='admin_panel.seo')),
            ],
            options={
                'db_table': 'service_site',
            },
        ),
        migrations.CreateModel(
            name='Section',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, default='', max_length=100, verbose_name='Секция')),
                ('house', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='admin_panel.house')),
            ],
            options={
                'db_table': 'section',
            },
        ),
        migrations.CreateModel(
            name='Receipt',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.CharField(blank=True, default='', max_length=100, verbose_name='')),
                ('is_complete', models.BooleanField(default=True)),
                ('date_published', models.DateTimeField(auto_now_add=True)),
                ('status', models.CharField(choices=[('paid', 'Оплачена'), ('partially_paid', 'Частично оплачена'), ('unpaid', 'Не оплачена')], default='unpaid', max_length=50, verbose_name='Статус')),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('total_price', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=20)),
                ('flat', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='admin_panel.flat')),
                ('service', models.ManyToManyField(blank=True, to='admin_panel.service')),
            ],
            options={
                'db_table': 'receipt',
            },
        ),
        migrations.CreateModel(
            name='PersonalAccount',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.CharField(blank=True, default='', max_length=100, verbose_name='№')),
                ('status', models.CharField(choices=[('active', 'Активен'), ('disabled', 'Не активен')], default='active', max_length=50, verbose_name='Статус')),
                ('flat', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='admin_panel.flat')),
                ('house', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='admin_panel.house')),
                ('section', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='admin_panel.section')),
            ],
            options={
                'db_table': 'personal_account',
            },
        ),
        migrations.CreateModel(
            name='Paybox',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.CharField(blank=True, default='', max_length=100, verbose_name='')),
                ('comment', models.TextField(blank=True, default='', verbose_name='Комментарий')),
                ('date_published', models.DateTimeField(auto_now_add=True)),
                ('total', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=20)),
                ('article', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='admin_panel.article')),
                ('flat_owner', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='admin_panel.flatowner')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='admin_panel.houseuser')),
            ],
            options={
                'db_table': 'paybox',
            },
        ),
        migrations.CreateModel(
            name='Message',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, default='', max_length=100)),
                ('description', models.TextField(blank=True, default='')),
                ('date_published', models.DateTimeField(auto_now_add=True)),
                ('flat_owner', models.ManyToManyField(to='admin_panel.flatowner')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='admin_panel.houseuser')),
            ],
            options={
                'db_table': 'message',
            },
        ),
        migrations.CreateModel(
            name='MainPage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, default='', max_length=100, verbose_name='Заголовок')),
                ('description', models.TextField(blank=True, default='', verbose_name='Краткий текст')),
                ('show_app_links', models.BooleanField(default=True)),
                ('gallery', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='admin_panel.gallery')),
                ('info_gallery', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='admin_panel.infogallery')),
                ('seo', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to='admin_panel.seo')),
            ],
            options={
                'db_table': 'main_page',
            },
        ),
        migrations.CreateModel(
            name='Indication',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.CharField(blank=True, default='', max_length=100, verbose_name='')),
                ('date_published', models.DateTimeField(auto_now_add=True)),
                ('status', models.CharField(choices=[('new', 'Новое'), ('considered', 'Учтено'), ('considered and paid', 'Учтено и оплачено'), ('null', 'Нулевое')], default='new', max_length=50, verbose_name='Статус')),
                ('flat', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='admin_panel.flat', verbose_name='Квартира')),
                ('service', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='admin_panel.service', verbose_name='Счётчик')),
            ],
            options={
                'db_table': 'indication',
            },
        ),
        migrations.AddField(
            model_name='house',
            name='user',
            field=models.ManyToManyField(to='admin_panel.houseuser'),
        ),
        migrations.CreateModel(
            name='Floor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, default='', max_length=100, verbose_name='Этаж')),
                ('house', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='admin_panel.house')),
            ],
            options={
                'db_table': 'floor',
            },
        ),
        migrations.AddField(
            model_name='flat',
            name='floor',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='admin_panel.floor'),
        ),
        migrations.AddField(
            model_name='flat',
            name='house',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='admin_panel.house'),
        ),
        migrations.AddField(
            model_name='flat',
            name='section',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='admin_panel.section'),
        ),
        migrations.AddField(
            model_name='flat',
            name='tariff',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='admin_panel.tariffsystem'),
        ),
        migrations.CreateModel(
            name='Contacts',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, default='', max_length=100, verbose_name='Заголовок')),
                ('description', models.TextField(blank=True, default='', verbose_name='Краткий текст')),
                ('full_name', models.CharField(blank=True, default='', max_length=100, verbose_name='Заголовок')),
                ('location', models.CharField(blank=True, default='', max_length=100, verbose_name='Заголовок')),
                ('address', models.CharField(blank=True, default='', max_length=100, verbose_name='Заголовок')),
                ('email', models.EmailField(max_length=150, unique=True, validators=[django.core.validators.EmailValidator()], verbose_name='Электронная почта')),
                ('phone', models.CharField(max_length=19, validators=[django.core.validators.MaxLengthValidator(19), django.core.validators.MinLengthValidator(19), django.core.validators.ProhibitNullCharactersValidator(), django.core.validators.RegexValidator('^\\+38 \\(\\d{3}\\) \\d{3}-?\\d{2}-?\\d{2}$', message='Неверно введён номер телефона.Пример ввода: +38 (098) 567-81-23')], verbose_name='Номер телефона')),
                ('site_link', models.URLField(default='', validators=[django.core.validators.URLValidator(message='XYZ', regex='https?:\\/\\/(www\\.)?[-a-zA-Z0-9@:%._\\+~#=]{1,256}\\.[a-zA-Z0-9()]{1,6}([-a-zA-Z0-9()@:%_\\+.~#?&\\/=]*)')], verbose_name='')),
                ('coordinate', models.TextField()),
                ('seo', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to='admin_panel.seo')),
            ],
            options={
                'db_table': 'contacts',
            },
        ),
        migrations.CreateModel(
            name='Application',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_published', models.DateTimeField(auto_now_add=True)),
                ('comment', models.TextField(blank=True, default='', verbose_name='Комментарий')),
                ('description', models.TextField(blank=True, default='', verbose_name='Описание')),
                ('time_published', models.TimeField(auto_now_add=True)),
                ('status', models.CharField(choices=[('new', 'Новое'), ('in work', 'В работе'), ('complete', 'Выполнено')], default='new', max_length=50, verbose_name='Статус')),
                ('flat', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='admin_panel.flat', verbose_name='Квартира')),
                ('flat_owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='admin_panel.flatowner')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='admin_panel.houseuser')),
            ],
            options={
                'db_table': 'application',
            },
        ),
        migrations.CreateModel(
            name='AboutUs',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, default='', max_length=100, verbose_name='Заголовок')),
                ('description', models.TextField(blank=True, default='', verbose_name='Краткий текст')),
                ('extra_title', models.CharField(blank=True, default='', max_length=100, verbose_name='Заголовок')),
                ('extra_description', models.TextField(blank=True, default='', verbose_name='Краткий текст')),
                ('director_photo', models.ImageField(upload_to=admin_panel.utilities.get_timestamp_path)),
                ('document', models.FileField(upload_to=admin_panel.utilities.get_timestamp_path)),
                ('extra_gallery', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='extra_gallery', to='admin_panel.gallery')),
                ('gallery', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='gallery', to='admin_panel.gallery')),
                ('seo', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to='admin_panel.seo')),
            ],
            options={
                'db_table': 'about_us',
            },
        ),
    ]
